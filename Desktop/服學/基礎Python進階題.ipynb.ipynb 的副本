{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 進階題1\n",
    "\n",
    "## Collatz conjecture 考拉茲猜想\n",
    "考拉茲猜想又稱為奇偶歸一猜想、3n+1猜想，是指對於每一個正整數，如果它是奇數，則對它乘3再加1，如果它是偶數，則對它除以2，如此循環，最終都能夠得到1。\n",
    "\n",
    "f(n) = \n",
    "       \n",
    "       n / 2 if n is even\n",
    "\n",
    "       3n + 1 if n is odd\n",
    "       \n",
    "也就是說給定一個n，經過不停地執行這個函式，最後都會得到1\n",
    "\n",
    "請你寫一個python程式，輸入一個正整數n，輸出每次執行完函式之後的值，0 < n < 10000\n",
    "\n",
    "範例測資：\n",
    "\n",
    "input:\n",
    "```\n",
    "35\n",
    "```\n",
    "output:\n",
    "```\n",
    "35, 106, 53, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 進階題2\n",
    "\n",
    "## Palindrome Number 回文數\n",
    "\n",
    "回文數是指一個像14641這樣「對稱」的數，即：將這個數的數字按相反的順序重新排列後，所得到的數和原來的數一樣。這裡，「回文」是指像「媽媽愛我，我愛媽媽」這樣的，正讀反讀都相同的單詞或句子。\n",
    "\n",
    "為了證明你愛媽媽，請你寫一個python程式，可以讓媽媽輸入一個正整數n並判斷是否為回文數，是就輸出\"媽媽愛我^^\"，不是請輸出\"媽媽討厭我QQ\"，0 < n < 99999999\n",
    "\n",
    "範例測資1：\n",
    "\n",
    "input:\n",
    "```\n",
    "121\n",
    "```\n",
    "\n",
    "output:\n",
    "```\n",
    "媽媽愛我^^\n",
    "```\n",
    "\n",
    "----\n",
    "範例測資2：\n",
    "\n",
    "input:\n",
    "```\n",
    "12111\n",
    "```\n",
    "\n",
    "output:\n",
    "```\n",
    "媽媽不愛我QQ\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 進階題3\n",
    "\n",
    "## Best Time to Buy and Sell Stock\n",
    "\n",
    "小瑜現在是一個股票買賣家，而他擁有某個股票未來n天的價錢，為了把股票拉進來打出去、發大財並且征服宇宙，他想要知道哪天買進和哪天賣出是最高獲利的組合，為此煩惱的小瑜求助於你的幫忙。\n",
    "\n",
    "你必須設計一個演算法告訴他哪天買進來和哪天賣出去會是最好的選擇，並且還會告訴他這個組合總共會賺多少錢。\n",
    "\n",
    "（假設小瑜一天只能進行交易一次，也就是一天只能買或賣一次。注意你不能賣掉還沒買進的股票）\n",
    "\n",
    "第一行輸入n，第2到第n+2行為未來n天股票的價格，請輸出須在哪天買進和哪天賣出股票才能夠最大化獲利，你也必須輸出能夠賺得多少錢，若無法獲利則輸出\"無最佳組合\"。\n",
    "\n",
    "範例測資1：\n",
    "\n",
    "input:\n",
    "```\n",
    "6\n",
    "7\n",
    "1\n",
    "5\n",
    "3\n",
    "6\n",
    "4\n",
    "```\n",
    "\n",
    "output:\n",
    "```\n",
    "在第2天買進，第5天賣出，能獲利5單位\n",
    "```\n",
    "\n",
    "----\n",
    "範例測資2：\n",
    "\n",
    "input:\n",
    "```\n",
    "5\n",
    "7\n",
    "6\n",
    "4\n",
    "3\n",
    "1\n",
    "```\n",
    "\n",
    "output:\n",
    "```\n",
    "無最佳組合\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 進階題4\n",
    "\n",
    "## 找錢\n",
    "\n",
    "如果你在一家零售店幫消費的客人結帳，你可能需要快速地挑出合適且數量正確的鈔票與零錢。假設客人的消費金額 a 一定是 1 到 1000 之間的整數，而你有無限量的 500、100、50、10、5、1 這些面額的鈔票和零錢，我們希望你能依照下面的規則找錢：\n",
    "\n",
    "1. 你找的錢的總額要是 1000−a。\n",
    "2. 與其給客人五張 100 元，不如給他一張 500 元；與其給客人兩個 50 元，不如給他一張 100 元……依此類推。\n",
    "\n",
    "以下是一些範例：\n",
    "1. 如果客人消費 200 元，你應該找給他 1 張 500 元和 3 張 100 元。\n",
    "\n",
    "2. 如果客人消費 286 元，你應該找給他 1 張 500 元、2 張 100 元、1 個 10 元和 4 個一元。\n",
    "\n",
    "3. 如果客人消費 925 元，你應該找給他 1 個 50 元、2 個 10 元和 1 個 5 元。\n",
    "\n",
    "在本題中，你將會被給予上述的整數 a，而你要找出符合上述規則的唯一找錢方式。\n",
    "\n",
    "範例測資：\n",
    "\n",
    "input:\n",
    "```\n",
    "286\n",
    "```\n",
    "\n",
    "output:\n",
    "```\n",
    "1 2 0 1 0 4\n",
    "```"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
